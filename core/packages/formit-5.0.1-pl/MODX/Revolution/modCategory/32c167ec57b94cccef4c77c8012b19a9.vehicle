<?php return array (
  'unique_key' => 'category',
  'preserve_keys' => false,
  'update_object' => true,
  'related_objects' => 
  array (
    'Chunks' => 
    array (
      '1095b2e4a050923e1744ab0f3e3555de' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'MODX\\Revolution\\modChunk',
        'object' => '{"id":null,"source":0,"property_preprocess":0,"name":"fiDefaultEmailTpl","description":"The default chunk used for the email. Please do not edit this chunk, as this will be overwritten when updating FormIt.","editor_type":0,"category":0,"cache_type":0,"snippet":"<p>[[+fields]]<\\/p>","locked":0,"properties":"a:0:{}","static":0,"static_file":"","content":"<p>[[+fields]]<\\/p>"}',
        'guid' => 'f9fc2d12ae67c92693461c2d03b4f403',
        'native_key' => NULL,
        'signature' => '0e5e273f44fc45a13c41b7c42c1a90e2',
      ),
      '845482f44015475ec9be5cbc7458500f' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'MODX\\Revolution\\modChunk',
        'object' => '{"id":null,"source":0,"property_preprocess":0,"name":"fiDefaultFiarTpl","description":"The default chunk used for the autoresponder email. Please do not edit this chunk, as this will be overwritten when updating FormIt.","editor_type":0,"category":0,"cache_type":0,"snippet":"<p>Hello [[+name]],<\\/p>\\n\\n<p>Your message has been received. We will respond as soon as possible. Thank you for contacting us.<\\/p>\\n\\n<p>NOTE: This is an automatic response; please do not respond to this message directly.<\\/p>\\n\\n<p>Here is your message:<br \\/>\\n[[+message:nl2br]]<\\/p>","locked":0,"properties":"a:0:{}","static":0,"static_file":"","content":"<p>Hello [[+name]],<\\/p>\\n\\n<p>Your message has been received. We will respond as soon as possible. Thank you for contacting us.<\\/p>\\n\\n<p>NOTE: This is an automatic response; please do not respond to this message directly.<\\/p>\\n\\n<p>Here is your message:<br \\/>\\n[[+message:nl2br]]<\\/p>"}',
        'guid' => 'ca89d52f14d66a01fe34a98fc186a945',
        'native_key' => NULL,
        'signature' => 'c3ce400014abbdc0a4c0005da3a1be5f',
      ),
      'aa57c389ea613c9e64c3350dc0ffd691' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'MODX\\Revolution\\modChunk',
        'object' => '{"id":null,"source":0,"property_preprocess":0,"name":"fiDefaultOptGroupTpl","description":"The default chunk used by the FormItCountryOptions snippet for the select optgroup. Please do not edit this chunk, as this will be overwritten when updating FormIt.","editor_type":0,"category":0,"cache_type":0,"snippet":"<optgroup label=\\"[[+text]]\\">\\n    [[+options]]\\n<\\/optgroup>","locked":0,"properties":"a:0:{}","static":0,"static_file":"","content":"<optgroup label=\\"[[+text]]\\">\\n    [[+options]]\\n<\\/optgroup>"}',
        'guid' => 'cdd8b7e3aeb8237bd6b89b29a1048128',
        'native_key' => NULL,
        'signature' => 'dbc08d67665e6f0d49b8c0e8a200ae73',
      ),
      '8e5a3ebb7605dd07ce3a2615888b5dc8' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'MODX\\Revolution\\modChunk',
        'object' => '{"id":null,"source":0,"property_preprocess":0,"name":"fiDefaultOptionTpl","description":"The default chunk used by the FormItCountryOptions snippet for the select option. Please do not edit this chunk, as this will be overwritten when updating FormIt.","editor_type":0,"category":0,"cache_type":0,"snippet":"<option value=\\"[[+value]]\\"[[+selected]]>[[+text]]<\\/option>","locked":0,"properties":"a:0:{}","static":0,"static_file":"","content":"<option value=\\"[[+value]]\\"[[+selected]]>[[+text]]<\\/option>"}',
        'guid' => 'e0ca08a6ab755911e11c80d4e496bd2b',
        'native_key' => NULL,
        'signature' => 'd3411315a5e55d61b294ccfc02bcf4be',
      ),
    ),
    'Snippets' => 
    array (
      '58a7cf861c5236c209300d4f325b8c29' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'MODX\\Revolution\\modSnippet',
        'object' => '{"id":null,"source":0,"property_preprocess":0,"name":"FormIt","description":"A dynamic form processing snippet.","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\n * FormIt\\n *\\n * A dynamic form processing Snippet for MODx Revolution.\\n *\\n * @var modX $modx\\n * @var array $scriptProperties\\n *\\n * @package formit\\n *\\/\\nuse Sterc\\\\FormIt;\\n\\n$fi = new FormIt($modx, $scriptProperties);\\n\\n$fi->initialize($modx->context->get(\'key\'));\\n$fi->loadRequest();\\n\\n$fields = $fi->request->prepare();\\n\\nreturn $fi->request->handle($fields);","locked":0,"properties":"a:61:{s:5:\\"hooks\\";a:7:{s:4:\\"name\\";s:5:\\"hooks\\";s:4:\\"desc\\";s:22:\\"prop_formit.hooks_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"preHooks\\";a:7:{s:4:\\"name\\";s:8:\\"preHooks\\";s:4:\\"desc\\";s:25:\\"prop_formit.prehooks_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:9:\\"submitVar\\";a:7:{s:4:\\"name\\";s:9:\\"submitVar\\";s:4:\\"desc\\";s:26:\\"prop_formit.submitvar_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"validate\\";a:7:{s:4:\\"name\\";s:8:\\"validate\\";s:4:\\"desc\\";s:25:\\"prop_formit.validate_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"errTpl\\";a:7:{s:4:\\"name\\";s:6:\\"errTpl\\";s:4:\\"desc\\";s:23:\\"prop_formit.errtpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:37:\\"<span class=\\"error\\">[[+error]]<\\/span>\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:22:\\"validationErrorMessage\\";a:7:{s:4:\\"name\\";s:22:\\"validationErrorMessage\\";s:4:\\"desc\\";s:39:\\"prop_formit.validationerrormessage_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:96:\\"<p class=\\"error\\">A form validation error occurred. Please check the values you have entered.<\\/p>\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:22:\\"validationErrorBulkTpl\\";a:7:{s:4:\\"name\\";s:22:\\"validationErrorBulkTpl\\";s:4:\\"desc\\";s:39:\\"prop_formit.validationerrorbulktpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:19:\\"<li>[[+error]]<\\/li>\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:26:\\"trimValuesBeforeValidation\\";a:7:{s:4:\\"name\\";s:26:\\"trimValuesBeforeValidation\\";s:4:\\"desc\\";s:43:\\"prop_formit.trimvaluesdeforevalidation_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:16:\\"customValidators\\";a:7:{s:4:\\"name\\";s:16:\\"customValidators\\";s:4:\\"desc\\";s:33:\\"prop_formit.customvalidators_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:20:\\"clearFieldsOnSuccess\\";a:7:{s:4:\\"name\\";s:20:\\"clearFieldsOnSuccess\\";s:4:\\"desc\\";s:37:\\"prop_formit.clearfieldsonsuccess_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:14:\\"successMessage\\";a:7:{s:4:\\"name\\";s:14:\\"successMessage\\";s:4:\\"desc\\";s:31:\\"prop_formit.successmessage_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:25:\\"successMessagePlaceholder\\";a:7:{s:4:\\"name\\";s:25:\\"successMessagePlaceholder\\";s:4:\\"desc\\";s:42:\\"prop_formit.successmessageplaceholder_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:17:\\"fi.successMessage\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:5:\\"store\\";a:7:{s:4:\\"name\\";s:5:\\"store\\";s:4:\\"desc\\";s:22:\\"prop_formit.store_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:17:\\"placeholderPrefix\\";a:7:{s:4:\\"name\\";s:17:\\"placeholderPrefix\\";s:4:\\"desc\\";s:34:\\"prop_formit.placeholderprefix_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:3:\\"fi.\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:9:\\"storeTime\\";a:7:{s:4:\\"name\\";s:9:\\"storeTime\\";s:4:\\"desc\\";s:26:\\"prop_formit.storetime_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:3:\\"300\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"storeLocation\\";a:7:{s:4:\\"name\\";s:13:\\"storeLocation\\";s:4:\\"desc\\";s:30:\\"prop_formit.storelocation_desc\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:5:\\"cache\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"allowFiles\\";a:7:{s:4:\\"name\\";s:10:\\"allowFiles\\";s:4:\\"desc\\";s:27:\\"prop_formit.allowfiles_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:15:\\"spamEmailFields\\";a:7:{s:4:\\"name\\";s:15:\\"spamEmailFields\\";s:4:\\"desc\\";s:32:\\"prop_formit.spamemailfields_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:5:\\"email\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"spamCheckIp\\";a:7:{s:4:\\"name\\";s:11:\\"spamCheckIp\\";s:4:\\"desc\\";s:28:\\"prop_formit.spamcheckip_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"recaptchaJs\\";a:7:{s:4:\\"name\\";s:11:\\"recaptchaJs\\";s:4:\\"desc\\";s:28:\\"prop_formit.recaptchajs_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:2:\\"{}\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:14:\\"recaptchaTheme\\";a:7:{s:4:\\"name\\";s:14:\\"recaptchaTheme\\";s:4:\\"desc\\";s:31:\\"prop_formit.recaptchatheme_desc\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:5:\\"clean\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"redirectTo\\";a:7:{s:4:\\"name\\";s:10:\\"redirectTo\\";s:4:\\"desc\\";s:27:\\"prop_formit.redirectto_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:14:\\"redirectParams\\";a:7:{s:4:\\"name\\";s:14:\\"redirectParams\\";s:4:\\"desc\\";s:31:\\"prop_formit.redirectparams_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"emailTo\\";a:7:{s:4:\\"name\\";s:7:\\"emailTo\\";s:4:\\"desc\\";s:24:\\"prop_formit.emailto_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"emailToName\\";a:7:{s:4:\\"name\\";s:11:\\"emailToName\\";s:4:\\"desc\\";s:28:\\"prop_formit.emailtoname_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:9:\\"emailFrom\\";a:7:{s:4:\\"name\\";s:9:\\"emailFrom\\";s:4:\\"desc\\";s:26:\\"prop_formit.emailfrom_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"emailFromName\\";a:7:{s:4:\\"name\\";s:13:\\"emailFromName\\";s:4:\\"desc\\";s:30:\\"prop_formit.emailfromname_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"emailReplyTo\\";a:7:{s:4:\\"name\\";s:12:\\"emailReplyTo\\";s:4:\\"desc\\";s:29:\\"prop_formit.emailreplyto_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:16:\\"emailReplyToName\\";a:7:{s:4:\\"name\\";s:16:\\"emailReplyToName\\";s:4:\\"desc\\";s:33:\\"prop_formit.emailreplytoname_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"emailCC\\";a:7:{s:4:\\"name\\";s:7:\\"emailCC\\";s:4:\\"desc\\";s:24:\\"prop_formit.emailcc_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"emailCCName\\";a:7:{s:4:\\"name\\";s:11:\\"emailCCName\\";s:4:\\"desc\\";s:28:\\"prop_formit.emailccname_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"emailBCC\\";a:7:{s:4:\\"name\\";s:8:\\"emailBCC\\";s:4:\\"desc\\";s:25:\\"prop_formit.emailbcc_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"emailBCCName\\";a:7:{s:4:\\"name\\";s:12:\\"emailBCCName\\";s:4:\\"desc\\";s:29:\\"prop_formit.emailbccname_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:15:\\"emailReturnPath\\";a:7:{s:4:\\"name\\";s:15:\\"emailReturnPath\\";s:4:\\"desc\\";s:32:\\"prop_formit.emailreturnpath_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"emailSubject\\";a:7:{s:4:\\"name\\";s:12:\\"emailSubject\\";s:4:\\"desc\\";s:29:\\"prop_formit.emailsubject_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:23:\\"emailUseFieldForSubject\\";a:7:{s:4:\\"name\\";s:23:\\"emailUseFieldForSubject\\";s:4:\\"desc\\";s:40:\\"prop_formit.emailusefieldforsubject_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:9:\\"emailHtml\\";a:7:{s:4:\\"name\\";s:9:\\"emailHtml\\";s:4:\\"desc\\";s:26:\\"prop_formit.emailhtml_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:20:\\"emailConvertNewlines\\";a:7:{s:4:\\"name\\";s:20:\\"emailConvertNewlines\\";s:4:\\"desc\\";s:37:\\"prop_formit.emailconvertnewlines_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:17:\\"emailMultiWrapper\\";a:7:{s:4:\\"name\\";s:17:\\"emailMultiWrapper\\";s:4:\\"desc\\";s:34:\\"prop_formit.emailmultiwrapper_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:10:\\"[[+value]]\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:19:\\"emailMultiSeparator\\";a:7:{s:4:\\"name\\";s:19:\\"emailMultiSeparator\\";s:4:\\"desc\\";s:36:\\"prop_formit.emailmultiseparator_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"fiarTpl\\";a:7:{s:4:\\"name\\";s:7:\\"fiarTpl\\";s:4:\\"desc\\";s:24:\\"prop_formit.fiartpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"fiarToField\\";a:7:{s:4:\\"name\\";s:11:\\"fiarToField\\";s:4:\\"desc\\";s:28:\\"prop_formit.fiartofield_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:5:\\"email\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"fiarSubject\\";a:7:{s:4:\\"name\\";s:11:\\"fiarSubject\\";s:4:\\"desc\\";s:28:\\"prop_formit.fiarsubject_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:30:\\"[[++site_name]] Auto-Responder\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"fiarFrom\\";a:7:{s:4:\\"name\\";s:8:\\"fiarFrom\\";s:4:\\"desc\\";s:25:\\"prop_formit.fiarfrom_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"fiarFromName\\";a:7:{s:4:\\"name\\";s:12:\\"fiarFromName\\";s:4:\\"desc\\";s:29:\\"prop_formit.fiarfromname_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"fiarReplyTo\\";a:7:{s:4:\\"name\\";s:11:\\"fiarReplyTo\\";s:4:\\"desc\\";s:28:\\"prop_formit.fiarreplyto_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:15:\\"fiarReplyToName\\";a:7:{s:4:\\"name\\";s:15:\\"fiarReplyToName\\";s:4:\\"desc\\";s:32:\\"prop_formit.fiarreplytoname_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"fiarCC\\";a:7:{s:4:\\"name\\";s:6:\\"fiarCC\\";s:4:\\"desc\\";s:23:\\"prop_formit.fiarcc_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"fiarCCName\\";a:7:{s:4:\\"name\\";s:10:\\"fiarCCName\\";s:4:\\"desc\\";s:25:\\"prop_fiar.fiarccname_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"fiarBCC\\";a:7:{s:4:\\"name\\";s:7:\\"fiarBCC\\";s:4:\\"desc\\";s:24:\\"prop_formit.fiarbcc_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"fiarBCCName\\";a:7:{s:4:\\"name\\";s:11:\\"fiarBCCName\\";s:4:\\"desc\\";s:28:\\"prop_formit.fiarbccname_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"fiarHtml\\";a:7:{s:4:\\"name\\";s:8:\\"fiarHtml\\";s:4:\\"desc\\";s:25:\\"prop_formit.fiarhtml_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"mathMinRange\\";a:7:{s:4:\\"name\\";s:12:\\"mathMinRange\\";s:4:\\"desc\\";s:29:\\"prop_formit.mathminrange_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:2:\\"10\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"mathMaxRange\\";a:7:{s:4:\\"name\\";s:12:\\"mathMaxRange\\";s:4:\\"desc\\";s:29:\\"prop_formit.mathmaxrange_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:3:\\"100\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:9:\\"mathField\\";a:7:{s:4:\\"name\\";s:9:\\"mathField\\";s:4:\\"desc\\";s:26:\\"prop_formit.mathfield_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:4:\\"math\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"mathOp1Field\\";a:7:{s:4:\\"name\\";s:12:\\"mathOp1Field\\";s:4:\\"desc\\";s:29:\\"prop_formit.mathop1field_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:3:\\"op1\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"mathOp2Field\\";a:7:{s:4:\\"name\\";s:12:\\"mathOp2Field\\";s:4:\\"desc\\";s:29:\\"prop_formit.mathop2field_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:3:\\"op2\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:17:\\"mathOperatorField\\";a:7:{s:4:\\"name\\";s:17:\\"mathOperatorField\\";s:4:\\"desc\\";s:34:\\"prop_formit.mathoperatorfield_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:8:\\"operator\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"saveTmpFiles\\";a:7:{s:4:\\"name\\";s:12:\\"saveTmpFiles\\";s:4:\\"desc\\";s:29:\\"prop_formit.savetmpfiles_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:18:\\"attachFilesToEmail\\";a:7:{s:4:\\"name\\";s:18:\\"attachFilesToEmail\\";s:4:\\"desc\\";s:28:\\"prop_formit.attachfiles_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:16:\\"storeAttachments\\";a:7:{s:4:\\"name\\";s:16:\\"storeAttachments\\";s:4:\\"desc\\";s:34:\\"prop_formit.store_attachments_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}}","moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * FormIt\\n *\\n * A dynamic form processing Snippet for MODx Revolution.\\n *\\n * @var modX $modx\\n * @var array $scriptProperties\\n *\\n * @package formit\\n *\\/\\nuse Sterc\\\\FormIt;\\n\\n$fi = new FormIt($modx, $scriptProperties);\\n\\n$fi->initialize($modx->context->get(\'key\'));\\n$fi->loadRequest();\\n\\n$fields = $fi->request->prepare();\\n\\nreturn $fi->request->handle($fields);"}',
        'guid' => '546caacc67aeddeeb8157eebfd94636c',
        'native_key' => NULL,
        'signature' => 'd7db7f7acdb7b0cbcd6994028cd1c165',
      ),
      '74370443910c8cf6a8f52f3cab06c97f' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'MODX\\Revolution\\modSnippet',
        'object' => '{"id":null,"source":0,"property_preprocess":0,"name":"FormItRetriever","description":"Fetches a form submission for a user for displaying on a thank you page.","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\n * FormItRetriever\\n *\\n * Retrieves a prior form submission that was stored with the &store property\\n * in a FormIt call.\\n *\\n * @var modX $modx\\n * @var array $scriptProperties\\n *\\n * @package formit\\n *\\/\\n\\nuse Sterc\\\\FormIt;\\n\\n$fi = new FormIt($modx, $scriptProperties);\\n\\n\\/* setup properties *\\/\\n$placeholderPrefix    = $modx->getOption(\'placeholderPrefix\', $scriptProperties, \'fi.\');\\n$eraseOnLoad          = $modx->getOption(\'eraseOnLoad\', $scriptProperties, false);\\n$redirectToOnNotFound = $modx->getOption(\'redirectToOnNotFound\', $scriptProperties, false);\\n\\n\\/* fetch data from cache and set to placeholders *\\/\\n$fi->loadRequest();\\n$fi->request->loadDictionary();\\n\\n$data = $fi->request->dictionary->retrieve();\\nif (!empty($data)) {\\n    \\/* set data to placeholders *\\/\\n    foreach ($data as $k => $v) {\\n        \\/*checkboxes & other multi-values are stored as arrays, must be imploded*\\/\\n        if (is_array($v)) {\\n            $data[$k] = implode(\',\', $v);\\n        }\\n    }\\n\\n    $modx->toPlaceholders($data, $placeholderPrefix, \'\');\\n\\n    \\/* if set, erase the data on load, otherwise depend on cache expiry time *\\/\\n    if ($eraseOnLoad) {\\n        $fi->request->dictionary->erase();\\n    }\\n\\/* if the data\'s not found, and we want to redirect somewhere if so, do here *\\/\\n} elseif (!empty($redirectToOnNotFound)) {\\n    $modx->sendRedirect($modx->makeUrl($redirectToOnNotFound));\\n}\\n\\nreturn \'\';","locked":0,"properties":"a:4:{s:17:\\"placeholderPrefix\\";a:7:{s:4:\\"name\\";s:17:\\"placeholderPrefix\\";s:4:\\"desc\\";s:31:\\"prop_fir.placeholderprefix_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:3:\\"fi.\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:20:\\"redirectToOnNotFound\\";a:7:{s:4:\\"name\\";s:20:\\"redirectToOnNotFound\\";s:4:\\"desc\\";s:34:\\"prop_fir.redirecttoonnotfound_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"eraseOnLoad\\";a:7:{s:4:\\"name\\";s:11:\\"eraseOnLoad\\";s:4:\\"desc\\";s:25:\\"prop_fir.eraseonload_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"storeLocation\\";a:7:{s:4:\\"name\\";s:13:\\"storeLocation\\";s:4:\\"desc\\";s:27:\\"prop_fir.storelocation_desc\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:5:\\"cache\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}}","moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * FormItRetriever\\n *\\n * Retrieves a prior form submission that was stored with the &store property\\n * in a FormIt call.\\n *\\n * @var modX $modx\\n * @var array $scriptProperties\\n *\\n * @package formit\\n *\\/\\n\\nuse Sterc\\\\FormIt;\\n\\n$fi = new FormIt($modx, $scriptProperties);\\n\\n\\/* setup properties *\\/\\n$placeholderPrefix    = $modx->getOption(\'placeholderPrefix\', $scriptProperties, \'fi.\');\\n$eraseOnLoad          = $modx->getOption(\'eraseOnLoad\', $scriptProperties, false);\\n$redirectToOnNotFound = $modx->getOption(\'redirectToOnNotFound\', $scriptProperties, false);\\n\\n\\/* fetch data from cache and set to placeholders *\\/\\n$fi->loadRequest();\\n$fi->request->loadDictionary();\\n\\n$data = $fi->request->dictionary->retrieve();\\nif (!empty($data)) {\\n    \\/* set data to placeholders *\\/\\n    foreach ($data as $k => $v) {\\n        \\/*checkboxes & other multi-values are stored as arrays, must be imploded*\\/\\n        if (is_array($v)) {\\n            $data[$k] = implode(\',\', $v);\\n        }\\n    }\\n\\n    $modx->toPlaceholders($data, $placeholderPrefix, \'\');\\n\\n    \\/* if set, erase the data on load, otherwise depend on cache expiry time *\\/\\n    if ($eraseOnLoad) {\\n        $fi->request->dictionary->erase();\\n    }\\n\\/* if the data\'s not found, and we want to redirect somewhere if so, do here *\\/\\n} elseif (!empty($redirectToOnNotFound)) {\\n    $modx->sendRedirect($modx->makeUrl($redirectToOnNotFound));\\n}\\n\\nreturn \'\';"}',
        'guid' => 'f3661c8ce06df44c15d79deafc1a5576',
        'native_key' => NULL,
        'signature' => 'a97f4425cfb5927695b154413d97affd',
      ),
      'e40f27493943bbbf7eb6c02e815806ad' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'MODX\\Revolution\\modSnippet',
        'object' => '{"id":null,"source":0,"property_preprocess":0,"name":"FormItIsChecked","description":"A custom output filter used with checkboxes\\/radios for checking checked status.","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\n * FormItIsChecked\\n *\\n * Custom output filter that returns checked=\\"checked\\" if the value is set\\n *\\n * @var string $input\\n * @var string $options\\n * @var modX $modx\\n *\\n * @package formit\\n *\\/\\n$output = \' \';\\nif ($input == $options) {\\n    $output = \' checked=\\"checked\\"\';\\n}\\n$input = $modx->fromJSON($input);\\nif (!empty($input) && is_array($input) && in_array($options,$input)) {\\n  $output = \' checked=\\"checked\\"\';\\n}\\nreturn $output;","locked":0,"properties":"a:0:{}","moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * FormItIsChecked\\n *\\n * Custom output filter that returns checked=\\"checked\\" if the value is set\\n *\\n * @var string $input\\n * @var string $options\\n * @var modX $modx\\n *\\n * @package formit\\n *\\/\\n$output = \' \';\\nif ($input == $options) {\\n    $output = \' checked=\\"checked\\"\';\\n}\\n$input = $modx->fromJSON($input);\\nif (!empty($input) && is_array($input) && in_array($options,$input)) {\\n  $output = \' checked=\\"checked\\"\';\\n}\\nreturn $output;"}',
        'guid' => 'a843a6119467fba7112ccc258cea3603',
        'native_key' => NULL,
        'signature' => 'd4405aed10d10d00bf2ddf792007c2a0',
      ),
      '813534a94fad4eed9d91dbeb73ef48d9' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'MODX\\Revolution\\modSnippet',
        'object' => '{"id":null,"source":0,"property_preprocess":0,"name":"FormItIsSelected","description":"A custom output filter used with dropdowns for checking selected status.","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\n * FormItIsChecked\\n *\\n * Custom output filter that returns checked=\\"checked\\" if the value is set\\n *\\n * @var string $input\\n * @var string $options\\n * @var modX $modx\\n *\\n * @package formit\\n *\\/\\n$output = \' \';\\nif ($input == $options) {\\n    $output = \' selected=\\"selected\\"\';\\n}\\n\\n$input = $modx->fromJSON($input);\\nif (!empty($input) && is_array($input) && in_array($options,$input)) {\\n  $output = \' selected=\\"selected\\"\';\\n}\\n\\nreturn $output;","locked":0,"properties":"a:0:{}","moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * FormItIsChecked\\n *\\n * Custom output filter that returns checked=\\"checked\\" if the value is set\\n *\\n * @var string $input\\n * @var string $options\\n * @var modX $modx\\n *\\n * @package formit\\n *\\/\\n$output = \' \';\\nif ($input == $options) {\\n    $output = \' selected=\\"selected\\"\';\\n}\\n\\n$input = $modx->fromJSON($input);\\nif (!empty($input) && is_array($input) && in_array($options,$input)) {\\n  $output = \' selected=\\"selected\\"\';\\n}\\n\\nreturn $output;"}',
        'guid' => 'f9b0b0f89e1ade14adfb0c4fd33869b4',
        'native_key' => NULL,
        'signature' => 'd571592819f77552f5b6dbade41520be',
      ),
      'f69f608b9ff43d8d76a44042779995fa' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'MODX\\Revolution\\modSnippet',
        'object' => '{"id":null,"source":0,"property_preprocess":0,"name":"FormItCountryOptions","description":"A utility snippet for generating a dropdown list of countries.","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\n * FormItCountryOptions\\n *\\n * Automatically generates and outputs a country list for usage in forms\\n *\\n * @var modX $modx\\n * @var array $scriptProperties\\n *\\n * @package formit\\n *\\/\\n\\nuse Sterc\\\\FormIt;\\n\\n$fi = new FormIt($modx, $scriptProperties);\\n\\n\\/** @var fiCountryOptions $co *\\/\\n$co = $fi->loadModule(\'fiCountryOptions\', \'countryOptions\', $scriptProperties);\\n$co->initialize();\\n$co->getData();\\n$co->loadPrioritized();\\n$co->iterate();\\n\\nreturn $co->output();","locked":0,"properties":"a:11:{s:8:\\"selected\\";a:7:{s:4:\\"name\\";s:8:\\"selected\\";s:4:\\"desc\\";s:23:\\"prop_fico.selected_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:3:\\"tpl\\";a:7:{s:4:\\"name\\";s:3:\\"tpl\\";s:4:\\"desc\\";s:18:\\"prop_fico.tpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:18:\\"fiDefaultOptionTpl\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"useIsoCode\\";a:7:{s:4:\\"name\\";s:10:\\"useIsoCode\\";s:4:\\"desc\\";s:25:\\"prop_fico.useisocode_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"prioritized\\";a:7:{s:4:\\"name\\";s:11:\\"prioritized\\";s:4:\\"desc\\";s:26:\\"prop_fico.prioritized_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"optGroupTpl\\";a:7:{s:4:\\"name\\";s:11:\\"optGroupTpl\\";s:4:\\"desc\\";s:26:\\"prop_fico.optgrouptpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:20:\\"fiDefaultOptGroupTpl\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:20:\\"prioritizedGroupText\\";a:7:{s:4:\\"name\\";s:20:\\"prioritizedGroupText\\";s:4:\\"desc\\";s:35:\\"prop_fico.prioritizedgrouptext_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"allGroupText\\";a:7:{s:4:\\"name\\";s:12:\\"allGroupText\\";s:4:\\"desc\\";s:27:\\"prop_fico.allgrouptext_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:17:\\"selectedAttribute\\";a:7:{s:4:\\"name\\";s:17:\\"selectedAttribute\\";s:4:\\"desc\\";s:32:\\"prop_fico.selectedattribute_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:20:\\" selected=\\"selected\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"toPlaceholder\\";a:7:{s:4:\\"name\\";s:13:\\"toPlaceholder\\";s:4:\\"desc\\";s:28:\\"prop_fico.toplaceholder_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"country\\";a:7:{s:4:\\"name\\";s:7:\\"country\\";s:4:\\"desc\\";s:22:\\"prop_fico.country_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:16:\\"[[++cultureKey]]\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"limited\\";a:7:{s:4:\\"name\\";s:7:\\"limited\\";s:4:\\"desc\\";s:22:\\"prop_fico.limited_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}}","moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * FormItCountryOptions\\n *\\n * Automatically generates and outputs a country list for usage in forms\\n *\\n * @var modX $modx\\n * @var array $scriptProperties\\n *\\n * @package formit\\n *\\/\\n\\nuse Sterc\\\\FormIt;\\n\\n$fi = new FormIt($modx, $scriptProperties);\\n\\n\\/** @var fiCountryOptions $co *\\/\\n$co = $fi->loadModule(\'fiCountryOptions\', \'countryOptions\', $scriptProperties);\\n$co->initialize();\\n$co->getData();\\n$co->loadPrioritized();\\n$co->iterate();\\n\\nreturn $co->output();"}',
        'guid' => 'd8a2437249b0d1dbeb34a7a82de32d6b',
        'native_key' => NULL,
        'signature' => 'e3e1ce04515c934a6865321cd7e19577',
      ),
      'db10a1248b824ff1a3b76b130a5d9ced' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'MODX\\Revolution\\modSnippet',
        'object' => '{"id":null,"source":0,"property_preprocess":0,"name":"FormItStateOptions","description":"A utility snippet for generating a dropdown list of U.S. states.","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\n * FormItStateOptions\\n *\\n * Automatically generates and outputs a U.S. state list for usage in forms\\n *\\n * @var modX $modx\\n * @var array $scriptProperties\\n *\\n * @package formit\\n *\\/\\nuse Sterc\\\\FormIt;\\n\\n$fi = new FormIt($modx, $scriptProperties);\\n\\n\\/** @var fiStateOptions $so *\\/\\n$so = $fi->loadModule(\'fiStateOptions\', \'stateOptions\', $scriptProperties);\\n$so->initialize();\\n$so->getData();\\n$so->iterate();\\n\\nreturn $so->output();","locked":0,"properties":"a:6:{s:8:\\"selected\\";a:7:{s:4:\\"name\\";s:8:\\"selected\\";s:4:\\"desc\\";s:23:\\"prop_fiso.selected_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:3:\\"tpl\\";a:7:{s:4:\\"name\\";s:3:\\"tpl\\";s:4:\\"desc\\";s:18:\\"prop_fiso.tpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:18:\\"fiDefaultOptionTpl\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"useAbbr\\";a:7:{s:4:\\"name\\";s:7:\\"useAbbr\\";s:4:\\"desc\\";s:22:\\"prop_fiso.useabbr_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:17:\\"selectedAttribute\\";a:7:{s:4:\\"name\\";s:17:\\"selectedAttribute\\";s:4:\\"desc\\";s:32:\\"prop_fiso.selectedattribute_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:20:\\" selected=\\"selected\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"toPlaceholder\\";a:7:{s:4:\\"name\\";s:13:\\"toPlaceholder\\";s:4:\\"desc\\";s:28:\\"prop_fiso.toplaceholder_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"country\\";a:7:{s:4:\\"name\\";s:7:\\"country\\";s:4:\\"desc\\";s:22:\\"prop_fiso.country_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:16:\\"[[++cultureKey]]\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}}","moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * FormItStateOptions\\n *\\n * Automatically generates and outputs a U.S. state list for usage in forms\\n *\\n * @var modX $modx\\n * @var array $scriptProperties\\n *\\n * @package formit\\n *\\/\\nuse Sterc\\\\FormIt;\\n\\n$fi = new FormIt($modx, $scriptProperties);\\n\\n\\/** @var fiStateOptions $so *\\/\\n$so = $fi->loadModule(\'fiStateOptions\', \'stateOptions\', $scriptProperties);\\n$so->initialize();\\n$so->getData();\\n$so->iterate();\\n\\nreturn $so->output();"}',
        'guid' => 'dddb1df95c813fc281e8e1e4d3314ae8',
        'native_key' => NULL,
        'signature' => '018242c22049ceec002a94efd50a8c40',
      ),
      '47cc8c8601b712030d7139d98f28cada' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'MODX\\Revolution\\modSnippet',
        'object' => '{"id":null,"source":0,"property_preprocess":0,"name":"FormItLoadSavedForm","description":"Prehook to load previously saved form.","editor_type":0,"category":0,"cache_type":0,"snippet":"use FormItForm;\\n\\n\\/**\\n * A custom FormIt prehook for fetching saved form data. - Based on FormItSaveForm\\n *\\n * @var modX $modx\\n * @var array $scriptProperties\\n * @var FormIt $formit\\n * @var fiHooks $hook\\n *\\n * @package formit\\n *\\/\\n\\/* setup default properties *\\/\\n\\/\\/ If prehook fails do we continue?\\n$return          = $modx->getOption(\'returnValueOnFail\', $formit->config, true);\\n$formEncrypt     = $modx->getOption(\'formEncrypt\', $formit->config, false);\\n$formFields      = $modx->getOption(\'formFields\', $formit->config, false);\\n$fieldNames      = $modx->getOption(\'fieldNames\', $formit->config, false);\\n$updateSavedForm = $modx->getOption(\'updateSavedForm\', $formit->config, false); \\/\\/ true, false, \'1\', \'0\', or \'values\'\\n\\n\\/\\/ If FormIt config says don\'t update, don\'t do it\\nif (!$updateSavedForm) {\\n    return $return;\\n}\\n\\n\\/\\/ In order to load form values, the user must provide the hash key somehow\\n\\/\\/ Usually with a $_GET parameter, but a property in $formit->config will override.\\n$formHashKeyField = $modx->getOption(\'savedFormHashKeyField\', $formit->config, \'savedFormHashKey\');\\n$formHashKey      = \'\';\\nif (isset($_GET[$formHashKeyField])) {\\n    $formHashKey = (string) $_GET[$formHashKeyField];\\n}\\n\\nif ($hook->getValue($formHashKeyField)) {\\n    $formHashKey = (string) $hook->getValue($formHashKeyField);\\n}\\n\\nif (isset($formit->config[$formHashKeyField])) {\\n    $formHashKey = $formit->config[$formHashKeyField];\\n}\\n\\n\\/\\/ our hashing methods return 32 chars. if no valid hash key we\'re done here.\\nif (strlen($formHashKey) !== 32) {\\n    return $return;\\n}\\n\\n\\/\\/ Try to fetch the saved form\\n$savedForm = $modx->getObject(FormItForm::class, [\'hash\' => $formHashKey]);\\nif (!$savedForm) {\\n    return $return;\\n}\\n\\nif ($formFields) {\\n    $formFields = explode(\',\', $formFields);\\n    foreach($formFields as $k => $v) {\\n        $formFields[$k] = trim($v);\\n    }\\n}\\n\\n\\/\\/ Initialize the data array\\n\\/\\/ Handle encryption\\nif ($formEncrypt) {\\n    $encrypted_data = $savedForm->get(\'values\');\\n    $data           = $savedForm->decrypt($encrypted_data);\\n} else {\\n    $data = $savedForm->get(\'values\');\\n}\\n\\nif (is_string($data)) {\\n    $data = $modx->fromJSON($data);\\n}\\n\\nif (!is_array($data)) {\\n    return $return;\\n}\\n\\n\\/\\/Change the fieldnames\\nif ($fieldNames) {\\n    $newDataArray   = [];\\n    $fieldLabels    = [];\\n    $formFieldNames = explode(\',\', $fieldNames);\\n    foreach($formFieldNames as $formFieldName){\\n        list($name, $label) = explode(\'==\', $formFieldName);\\n        \\/\\/ reverse order from FormItSaveForm snippet\\n        $fieldLabels[trim($label)] = trim($name);\\n    }\\n\\n    foreach ($data as $key => $value) {\\n        if ($fieldLabels[$key]) {\\n            $newDataArray[$fieldLabels[$key]] = $value;\\n        } else {\\n            $newDataArray[$key] = $value;\\n        }\\n    }\\n\\n    $data = $newDataArray;\\n}\\n\\n\\/\\/ Always pass back in the provided hash key\\n$data[$formHashKeyField] = $formHashKey;\\n\\n$hook->setValues($data);\\n\\nreturn true;","locked":0,"properties":"a:0:{}","moduleguid":"","static":0,"static_file":"","content":"use FormItForm;\\n\\n\\/**\\n * A custom FormIt prehook for fetching saved form data. - Based on FormItSaveForm\\n *\\n * @var modX $modx\\n * @var array $scriptProperties\\n * @var FormIt $formit\\n * @var fiHooks $hook\\n *\\n * @package formit\\n *\\/\\n\\/* setup default properties *\\/\\n\\/\\/ If prehook fails do we continue?\\n$return          = $modx->getOption(\'returnValueOnFail\', $formit->config, true);\\n$formEncrypt     = $modx->getOption(\'formEncrypt\', $formit->config, false);\\n$formFields      = $modx->getOption(\'formFields\', $formit->config, false);\\n$fieldNames      = $modx->getOption(\'fieldNames\', $formit->config, false);\\n$updateSavedForm = $modx->getOption(\'updateSavedForm\', $formit->config, false); \\/\\/ true, false, \'1\', \'0\', or \'values\'\\n\\n\\/\\/ If FormIt config says don\'t update, don\'t do it\\nif (!$updateSavedForm) {\\n    return $return;\\n}\\n\\n\\/\\/ In order to load form values, the user must provide the hash key somehow\\n\\/\\/ Usually with a $_GET parameter, but a property in $formit->config will override.\\n$formHashKeyField = $modx->getOption(\'savedFormHashKeyField\', $formit->config, \'savedFormHashKey\');\\n$formHashKey      = \'\';\\nif (isset($_GET[$formHashKeyField])) {\\n    $formHashKey = (string) $_GET[$formHashKeyField];\\n}\\n\\nif ($hook->getValue($formHashKeyField)) {\\n    $formHashKey = (string) $hook->getValue($formHashKeyField);\\n}\\n\\nif (isset($formit->config[$formHashKeyField])) {\\n    $formHashKey = $formit->config[$formHashKeyField];\\n}\\n\\n\\/\\/ our hashing methods return 32 chars. if no valid hash key we\'re done here.\\nif (strlen($formHashKey) !== 32) {\\n    return $return;\\n}\\n\\n\\/\\/ Try to fetch the saved form\\n$savedForm = $modx->getObject(FormItForm::class, [\'hash\' => $formHashKey]);\\nif (!$savedForm) {\\n    return $return;\\n}\\n\\nif ($formFields) {\\n    $formFields = explode(\',\', $formFields);\\n    foreach($formFields as $k => $v) {\\n        $formFields[$k] = trim($v);\\n    }\\n}\\n\\n\\/\\/ Initialize the data array\\n\\/\\/ Handle encryption\\nif ($formEncrypt) {\\n    $encrypted_data = $savedForm->get(\'values\');\\n    $data           = $savedForm->decrypt($encrypted_data);\\n} else {\\n    $data = $savedForm->get(\'values\');\\n}\\n\\nif (is_string($data)) {\\n    $data = $modx->fromJSON($data);\\n}\\n\\nif (!is_array($data)) {\\n    return $return;\\n}\\n\\n\\/\\/Change the fieldnames\\nif ($fieldNames) {\\n    $newDataArray   = [];\\n    $fieldLabels    = [];\\n    $formFieldNames = explode(\',\', $fieldNames);\\n    foreach($formFieldNames as $formFieldName){\\n        list($name, $label) = explode(\'==\', $formFieldName);\\n        \\/\\/ reverse order from FormItSaveForm snippet\\n        $fieldLabels[trim($label)] = trim($name);\\n    }\\n\\n    foreach ($data as $key => $value) {\\n        if ($fieldLabels[$key]) {\\n            $newDataArray[$fieldLabels[$key]] = $value;\\n        } else {\\n            $newDataArray[$key] = $value;\\n        }\\n    }\\n\\n    $data = $newDataArray;\\n}\\n\\n\\/\\/ Always pass back in the provided hash key\\n$data[$formHashKeyField] = $formHashKey;\\n\\n$hook->setValues($data);\\n\\nreturn true;"}',
        'guid' => '6cb18fb87407c3875bf02960f2e595f7',
        'native_key' => NULL,
        'signature' => 'a6c12ca5e0d426a48e8dcca80beb4ee7',
      ),
    ),
    'Plugins' => 
    array (
      '3adec7226c8e2bddba2853d77581228d' => 
      array (
        'unique_key' => 'name',
        'preserve_keys' => false,
        'update_object' => true,
        'related_objects' => 
        array (
          'PluginEvents' => 
          array (
            'affa710f94e6f5ebfd357b375f615747' => 
            array (
              'preserve_keys' => true,
              'update_object' => true,
              'unique_key' => 
              array (
                0 => 'pluginid',
                1 => 'event',
              ),
              'related_objects' => true,
              'related_object_attributes' => 
              array (
                'PropertySet' => 
                array (
                  'unique_key' => 'name',
                  'preserve_keys' => false,
                  'update_object' => false,
                ),
              ),
              'class' => 'MODX\\Revolution\\modPluginEvent',
              'object' => '{"pluginid":0,"event":"OnManagerPageBeforeRender","priority":0,"propertyset":0}',
              'guid' => '7c23af71a757d152aa4b1e41ae05114c',
              'native_key' => 
              array (
                0 => 0,
                1 => 'OnManagerPageBeforeRender',
              ),
              'signature' => '3fbdbd7b86e547ba1ce09dee0e5522f2',
            ),
          ),
        ),
        'related_object_attributes' => 
        array (
          'PluginEvents' => 
          array (
            'preserve_keys' => true,
            'update_object' => true,
            'unique_key' => 
            array (
              0 => 'pluginid',
              1 => 'event',
            ),
            'related_objects' => true,
            'related_object_attributes' => 
            array (
              'PropertySet' => 
              array (
                'unique_key' => 'name',
                'preserve_keys' => false,
                'update_object' => false,
              ),
            ),
          ),
        ),
        'class' => 'MODX\\Revolution\\modPlugin',
        'object' => '{"id":null,"source":0,"property_preprocess":0,"name":"FormIt","description":"","editor_type":0,"category":0,"cache_type":0,"plugincode":"\\/**\\n * FormIt plugin\\n *\\n * @package formit\\n *\\/\\nuse Sterc\\\\FormIt;\\n\\nswitch ($modx->event->name) {\\n    case \'OnManagerPageBeforeRender\':\\n        \\/\\/ If migration status is false, show migrate alert message bar in manager\\n        if (method_exists(\'Sterc\\\\FormIt\', \'encryptionMigrationStatus\')) {\\n            $formit = new FormIt($modx, $scriptProperties);\\n\\n            if (!$formit->encryptionMigrationStatus()) {\\n                $modx->lexicon->load(\'formit:mgr\');\\n\\n                $properties = [\'message\' => $modx->lexicon(\'formit.migrate_alert\')];\\n                $chunk      = $formit->_getTplChunk(\'migrate\\/alert\');\\n                if ($chunk) {\\n                    $modx->regClientStartupHTMLBlock($chunk->process($properties));\\n                    $modx->regClientCSS($formit->config[\'css_url\'] . \'migrate.css\');\\n                }\\n            }\\n        }\\n\\n    break;\\n}","locked":0,"properties":"a:0:{}","disabled":0,"moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * FormIt plugin\\n *\\n * @package formit\\n *\\/\\nuse Sterc\\\\FormIt;\\n\\nswitch ($modx->event->name) {\\n    case \'OnManagerPageBeforeRender\':\\n        \\/\\/ If migration status is false, show migrate alert message bar in manager\\n        if (method_exists(\'Sterc\\\\FormIt\', \'encryptionMigrationStatus\')) {\\n            $formit = new FormIt($modx, $scriptProperties);\\n\\n            if (!$formit->encryptionMigrationStatus()) {\\n                $modx->lexicon->load(\'formit:mgr\');\\n\\n                $properties = [\'message\' => $modx->lexicon(\'formit.migrate_alert\')];\\n                $chunk      = $formit->_getTplChunk(\'migrate\\/alert\');\\n                if ($chunk) {\\n                    $modx->regClientStartupHTMLBlock($chunk->process($properties));\\n                    $modx->regClientCSS($formit->config[\'css_url\'] . \'migrate.css\');\\n                }\\n            }\\n        }\\n\\n    break;\\n}"}',
        'guid' => 'bff1fbbcbeed869672cbf6378ae47d59',
        'native_key' => NULL,
        'signature' => '79d647ca9360c1ae9cf6545349d97ee1',
      ),
    ),
  ),
  'related_object_attributes' => 
  array (
    'Children' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 
      array (
        0 => 'parent',
        1 => 'category',
      ),
    ),
    'Snippets' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 'name',
    ),
    'Chunks' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 'name',
    ),
    'Templates' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 'templatename',
    ),
    'TemplateVars' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 'name',
    ),
    'PropertySets' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 'name',
    ),
    'Plugins' => 
    array (
      'unique_key' => 'name',
      'preserve_keys' => false,
      'update_object' => true,
      'related_objects' => true,
      'related_object_attributes' => 
      array (
        'PluginEvents' => 
        array (
          'preserve_keys' => true,
          'update_object' => true,
          'unique_key' => 
          array (
            0 => 'pluginid',
            1 => 'event',
          ),
          'related_objects' => true,
          'related_object_attributes' => 
          array (
            'PropertySet' => 
            array (
              'unique_key' => 'name',
              'preserve_keys' => false,
              'update_object' => false,
            ),
          ),
        ),
      ),
    ),
  ),
  'resolve' => 
  array (
    0 => 
    array (
      'type' => 'php',
      'body' => '{"type":"php","snippets":{"FormIt":[],"FormItRetriever":[],"FormItIsChecked":[],"FormItIsSelected":[],"FormItCountryOptions":[],"FormItStateOptions":[],"FormItLoadSavedForm":[]},"chunks":{"fiDefaultEmailTpl":[],"fiDefaultFiarTpl":[],"fiDefaultOptGroupTpl":[],"fiDefaultOptionTpl":[]},"plugins":{"FormIt":[]},"templates":[],"source":"formit-5.0.1-pl\\/MODX\\/Revolution\\/modCategory\\/32c167ec57b94cccef4c77c8012b19a9.gpm.resolve.element_property_set.resolver","name":"gpm.resolve.element_property_set"}',
    ),
  ),
  'vehicle_class' => 'xPDO\\Transport\\xPDOObjectVehicle',
  'guid' => 'e4f16b6ab0d0e5281878a78fc88e7510',
  'package' => '',
  'class' => 'MODX\\Revolution\\modCategory',
  'signature' => '32c167ec57b94cccef4c77c8012b19a9',
  'native_key' => NULL,
  'object' => '{"id":null,"parent":0,"category":"FormIt","rank":0}',
);